# Options
set autoquit true    # automatically quit server when there are no clients left connected
set drawbox true     # draw boxes around panes
set hidden true      # show hidden files
set icons true       # show icons before each item in the list
set ifs "\n"         # set internal field separator to "\n" for shell commands
set ignorecase true  # ignore case in sorting and search patterns
set scrolloff 10     # leave some space at top and bottom of the screen
set shell bash       # interpreter for shell commands
set shellopts '-eu'  # options for shell commands: -e to exit on error -u to error out on unset variables

# Custom Functions
## create directory
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir -p $ans
}}

## create file
cmd mkfile ${{
  printf "File Name: "
  read ans
  touch $ans
}}

## open file based on mime type
cmd open ${{
  case $(file --brief --mime-type --dereference "$f") in
    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
    image/vnd.djvu|application/vnd*|application/epub*|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
    text/*|application/json|inode/x-empty) $EDITOR $fx;;
    image/svg+xml) display -- $f ;;
    image/*) setsid -f sxiv -a $fx ;;
    audio/*) mpv --audio-display=no $f ;;
    video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
    *) for f in $fx; do setsid -f xdg-open $f >/dev/null 2>&1; done;;
  esac
}}

## show files to be deleted on confirmation
cmd delete ${{
  clear
  set -f
  printf "$fx\n\n"
  printf "delete?[y/N]"
  read ans
  [ $ans = "y" ] && rm -rf $fx
}}

## extract the current file with the right command
cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}

## compress current file or selected files with tar and gunzip
cmd tar ${{
  set -f
  printf "File Name: "
  read ans
  mkdir $ans
  cp -r $fx $ans
  tar czf $ans.tar.gz $ans
  rm -rf $ans
}}

## compress current file or selected files with zip
cmd zip ${{
  set -f
  printf "File Name: "
  read ans
  mkdir $ans
  cp -r $fx $ans
  zip -r $ans.zip $ans
  rm -rf $ans
}}

# Key Bindings
map <enter> open
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map D delete
map E extract

map Md mkdir
map Mf mkfile
map Mz zip $fx
map Mt tar $fx
map sd set drawbox!
map sw setxwall $f

# Fast travel
map gd cd ~/Downloads
map gp cd ~/Pictures
map gc cd ~/.config
map gm cd ~/Music
